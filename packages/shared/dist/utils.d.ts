import { Role } from './types';
export declare function maskPII(value: string, type?: 'email' | 'phone' | 'ssn' | 'name'): string;
export declare function generateId(): string;
export declare function formatCurrency(amount: number): string;
export declare function formatDate(date: Date): string;
export declare function formatDateTime(date: Date): string;
export declare function calculateOccupancyRate(occupied: number, total: number): number;
export declare function calculateDelinquencyRate(delinquent: number, total: number): number;
export declare function getRoleHierarchy(): Record<Role, number>;
export declare function canUserAccessRole(userRole: Role, targetRole: Role): boolean;
export declare function sanitizeFilename(filename: string): string;
export declare function isValidEmail(email: string): boolean;
export declare function isValidPhoneNumber(phone: string): boolean;
export declare function debounce<T extends (...args: any[]) => any>(func: T, wait: number): (...args: Parameters<T>) => void;
export declare function throttle<T extends (...args: any[]) => any>(func: T, limit: number): (...args: Parameters<T>) => void;
export declare function chunk<T>(array: T[], size: number): T[][];
export declare function groupBy<T, K extends keyof any>(array: T[], key: (item: T) => K): Record<K, T[]>;
export declare function sleep(ms: number): Promise<void>;
export declare function retry<T>(fn: () => Promise<T>, attempts?: number, delay?: number): Promise<T>;
//# sourceMappingURL=utils.d.ts.map